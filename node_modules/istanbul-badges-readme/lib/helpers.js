"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readFileAsync = exports.getReadmePath = exports.getCoveragePath = void 0;
const fs_1 = __importDefault(require("fs"));
const arguments_1 = require("./arguments");
const getCoveragePath = (path) => {
    let coveragePath = path;
    const argPath = arguments_1.getArgumentValue('coverageDir');
    if (argPath) {
        coveragePath = `${argPath}/coverage-summary.json`;
    }
    return coveragePath;
};
exports.getCoveragePath = getCoveragePath;
const getReadmePath = (path) => {
    let readmePath = path;
    const argPath = arguments_1.getArgumentValue('readmeDir');
    if (argPath) {
        readmePath = `${argPath}/README.md`;
    }
    return readmePath;
};
exports.getReadmePath = getReadmePath;
const readFileAsync = async (path, encode) => {
    return new Promise((resolve, reject) => {
        fs_1.default.readFile(path, encode, (err, data) => {
            if (err)
                reject(`file not found: ${path}`);
            resolve(data);
        });
    });
};
exports.readFileAsync = readFileAsync;
